var _user$project$MovieStore$init = function (state) {
	return {ctor: '_Tuple2', _0: state, _1: _elm_lang$core$Platform_Cmd$none};
};
var _user$project$MovieStore$storeFromPort = _elm_lang$core$Native_Platform.incomingPort(
	'storeFromPort',
	A2(
		_elm_lang$core$Json_Decode$andThen,
		function (id) {
			return A2(
				_elm_lang$core$Json_Decode$andThen,
				function (title) {
					return A2(
						_elm_lang$core$Json_Decode$andThen,
						function (thumbnailUrl) {
							return A2(
								_elm_lang$core$Json_Decode$andThen,
								function (detailUrl) {
									return A2(
										_elm_lang$core$Json_Decode$andThen,
										function (story) {
											return _elm_lang$core$Json_Decode$succeed(
												{id: id, title: title, thumbnailUrl: thumbnailUrl, detailUrl: detailUrl, story: story});
										},
										A2(
											_elm_lang$core$Json_Decode$field,
											'story',
											_elm_lang$core$Json_Decode$oneOf(
												{
													ctor: '::',
													_0: _elm_lang$core$Json_Decode$null(_elm_lang$core$Maybe$Nothing),
													_1: {
														ctor: '::',
														_0: A2(_elm_lang$core$Json_Decode$map, _elm_lang$core$Maybe$Just, _elm_lang$core$Json_Decode$string),
														_1: {ctor: '[]'}
													}
												})));
								},
								A2(_elm_lang$core$Json_Decode$field, 'detailUrl', _elm_lang$core$Json_Decode$string));
						},
						A2(_elm_lang$core$Json_Decode$field, 'thumbnailUrl', _elm_lang$core$Json_Decode$string));
				},
				A2(_elm_lang$core$Json_Decode$field, 'title', _elm_lang$core$Json_Decode$string));
		},
		A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$string)));
var _user$project$MovieStore$pushState = _elm_lang$core$Native_Platform.outgoingPort(
	'pushState',
	function (v) {
		return {
			movies: (v.movies.ctor === 'Nothing') ? null : _elm_lang$core$Native_List.toArray(v.movies._0).map(
				function (v) {
					return {
						id: v.id,
						title: v.title,
						thumbnailUrl: v.thumbnailUrl,
						detailUrl: v.detailUrl,
						story: (v.story.ctor === 'Nothing') ? null : v.story._0
					};
				})
		};
	});
var _user$project$MovieStore$update = F2(
	function (msg, state) {
		var _p0 = msg;
		if (_p0.ctor === 'Store') {
			var nextState = _elm_lang$core$Native_Utils.update(
				state,
				{
					movies: A2(
						_elm_lang$core$Maybe$map,
						function (movies) {
							return {ctor: '::', _0: _p0._0, _1: movies};
						},
						state.movies)
				});
			return {
				ctor: '_Tuple2',
				_0: nextState,
				_1: _user$project$MovieStore$pushState(nextState)
			};
		} else {
			return {ctor: '_Tuple2', _0: state, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _user$project$MovieStore$State = function (a) {
	return {movies: a};
};
var _user$project$MovieStore$Store = function (a) {
	return {ctor: 'Store', _0: a};
};
var _user$project$MovieStore$subscriptions = function (state) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: _user$project$MovieStore$storeFromPort(_user$project$MovieStore$Store),
			_1: {ctor: '[]'}
		});
};
var _user$project$MovieStore$main = _elm_lang$core$Platform$programWithFlags(
	{init: _user$project$MovieStore$init, update: _user$project$MovieStore$update, subscriptions: _user$project$MovieStore$subscriptions})(
	A2(
		_elm_lang$core$Json_Decode$andThen,
		function (movies) {
			return _elm_lang$core$Json_Decode$succeed(
				{movies: movies});
		},
		A2(
			_elm_lang$core$Json_Decode$field,
			'movies',
			_elm_lang$core$Json_Decode$oneOf(
				{
					ctor: '::',
					_0: _elm_lang$core$Json_Decode$null(_elm_lang$core$Maybe$Nothing),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$core$Json_Decode$map,
							_elm_lang$core$Maybe$Just,
							_elm_lang$core$Json_Decode$list(
								A2(
									_elm_lang$core$Json_Decode$andThen,
									function (detailUrl) {
										return A2(
											_elm_lang$core$Json_Decode$andThen,
											function (id) {
												return A2(
													_elm_lang$core$Json_Decode$andThen,
													function (story) {
														return A2(
															_elm_lang$core$Json_Decode$andThen,
															function (thumbnailUrl) {
																return A2(
																	_elm_lang$core$Json_Decode$andThen,
																	function (title) {
																		return _elm_lang$core$Json_Decode$succeed(
																			{detailUrl: detailUrl, id: id, story: story, thumbnailUrl: thumbnailUrl, title: title});
																	},
																	A2(_elm_lang$core$Json_Decode$field, 'title', _elm_lang$core$Json_Decode$string));
															},
															A2(_elm_lang$core$Json_Decode$field, 'thumbnailUrl', _elm_lang$core$Json_Decode$string));
													},
													A2(
														_elm_lang$core$Json_Decode$field,
														'story',
														_elm_lang$core$Json_Decode$oneOf(
															{
																ctor: '::',
																_0: _elm_lang$core$Json_Decode$null(_elm_lang$core$Maybe$Nothing),
																_1: {
																	ctor: '::',
																	_0: A2(_elm_lang$core$Json_Decode$map, _elm_lang$core$Maybe$Just, _elm_lang$core$Json_Decode$string),
																	_1: {ctor: '[]'}
																}
															})));
											},
											A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$string));
									},
									A2(_elm_lang$core$Json_Decode$field, 'detailUrl', _elm_lang$core$Json_Decode$string)))),
						_1: {ctor: '[]'}
					}
				}))));
var _user$project$MovieStore$Nil = {ctor: 'Nil'};
