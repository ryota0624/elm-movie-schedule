var _user$project$MovieComponent$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: _user$project$MoviePort$movie(_user$project$MovieUpdate$StoreMovie),
			_1: {
				ctor: '::',
				_0: _user$project$MoviePort$review(_user$project$MovieUpdate$StoreReview),
				_1: {
					ctor: '::',
					_0: _user$project$MoviePort$state(_user$project$MovieUpdate$StoreState),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$MovieComponent$init = function (state) {
	return {ctor: '_Tuple2', _0: state, _1: _elm_lang$core$Platform_Cmd$none};
};
var _user$project$MovieComponent$main = _elm_lang$html$Html$programWithFlags(
	{init: _user$project$MovieComponent$init, view: _user$project$MovieView$view, update: _user$project$MovieUpdate$update, subscriptions: _user$project$MovieComponent$subscriptions})(
	A2(
		_elm_lang$core$Json_Decode$andThen,
		function (movie) {
			return A2(
				_elm_lang$core$Json_Decode$andThen,
				function (review) {
					return _elm_lang$core$Json_Decode$succeed(
						{movie: movie, review: review});
				},
				A2(
					_elm_lang$core$Json_Decode$field,
					'review',
					_elm_lang$core$Json_Decode$oneOf(
						{
							ctor: '::',
							_0: _elm_lang$core$Json_Decode$null(_elm_lang$core$Maybe$Nothing),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$core$Json_Decode$map,
									_elm_lang$core$Maybe$Just,
									A2(
										_elm_lang$core$Json_Decode$andThen,
										function (id) {
											return A2(
												_elm_lang$core$Json_Decode$andThen,
												function (point) {
													return _elm_lang$core$Json_Decode$succeed(
														{id: id, point: point});
												},
												A2(_elm_lang$core$Json_Decode$field, 'point', _elm_lang$core$Json_Decode$int));
										},
										A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$string))),
								_1: {ctor: '[]'}
							}
						})));
		},
		A2(
			_elm_lang$core$Json_Decode$field,
			'movie',
			_elm_lang$core$Json_Decode$oneOf(
				{
					ctor: '::',
					_0: _elm_lang$core$Json_Decode$null(_elm_lang$core$Maybe$Nothing),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$core$Json_Decode$map,
							_elm_lang$core$Maybe$Just,
							A2(
								_elm_lang$core$Json_Decode$andThen,
								function (detailUrl) {
									return A2(
										_elm_lang$core$Json_Decode$andThen,
										function (id) {
											return A2(
												_elm_lang$core$Json_Decode$andThen,
												function (story) {
													return A2(
														_elm_lang$core$Json_Decode$andThen,
														function (thumbnailUrl) {
															return A2(
																_elm_lang$core$Json_Decode$andThen,
																function (title) {
																	return _elm_lang$core$Json_Decode$succeed(
																		{detailUrl: detailUrl, id: id, story: story, thumbnailUrl: thumbnailUrl, title: title});
																},
																A2(_elm_lang$core$Json_Decode$field, 'title', _elm_lang$core$Json_Decode$string));
														},
														A2(_elm_lang$core$Json_Decode$field, 'thumbnailUrl', _elm_lang$core$Json_Decode$string));
												},
												A2(
													_elm_lang$core$Json_Decode$field,
													'story',
													_elm_lang$core$Json_Decode$oneOf(
														{
															ctor: '::',
															_0: _elm_lang$core$Json_Decode$null(_elm_lang$core$Maybe$Nothing),
															_1: {
																ctor: '::',
																_0: A2(_elm_lang$core$Json_Decode$map, _elm_lang$core$Maybe$Just, _elm_lang$core$Json_Decode$string),
																_1: {ctor: '[]'}
															}
														})));
										},
										A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$string));
								},
								A2(_elm_lang$core$Json_Decode$field, 'detailUrl', _elm_lang$core$Json_Decode$string))),
						_1: {ctor: '[]'}
					}
				}))));
