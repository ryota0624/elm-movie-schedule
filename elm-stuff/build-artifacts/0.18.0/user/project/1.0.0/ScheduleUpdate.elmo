var _user$project$ScheduleUpdate$timeJumpDay = F2(
	function (date, num) {
		var time = _elm_lang$core$Time$inMilliseconds(
			_elm_lang$core$Date$toTime(date));
		var movedTime = time + ((((num * 60) * 60) * 24) * 1000);
		return {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Date$fromTime(movedTime),
			_1: movedTime
		};
	});
var _user$project$ScheduleUpdate$update = F2(
	function (msg, state) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'NoMsg':
				return {ctor: '_Tuple2', _0: state, _1: _elm_lang$core$Platform_Cmd$none};
			case 'StoreSchedule':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						state,
						{
							schedule: _elm_lang$core$Maybe$Just(_p0._0)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'ClickMovie':
				return {
					ctor: '_Tuple2',
					_0: state,
					_1: _user$project$SchedulePort$onClickMovie(_p0._0)
				};
			case 'SetTime':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						state,
						{
							currentDate: _elm_lang$core$Maybe$Just(
								_elm_lang$core$Date$fromTime(_p0._0))
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'ClickPrevDate':
				var _p1 = A2(_user$project$ScheduleUpdate$timeJumpDay, _p0._0, -1);
				var movedDate = _p1._0;
				var movedTime = _p1._1;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						state,
						{
							currentDate: _elm_lang$core$Maybe$Just(movedDate)
						}),
					_1: _user$project$SchedulePort$onChangePreviewTime(movedTime)
				};
			default:
				var _p2 = A2(_user$project$ScheduleUpdate$timeJumpDay, _p0._0, 1);
				var movedDate = _p2._0;
				var movedTime = _p2._1;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						state,
						{
							currentDate: _elm_lang$core$Maybe$Just(movedDate)
						}),
					_1: _user$project$SchedulePort$onChangePreviewTime(movedTime)
				};
		}
	});
var _user$project$ScheduleUpdate$State = F2(
	function (a, b) {
		return {schedule: a, currentDate: b};
	});
var _user$project$ScheduleUpdate$ClickNextDate = function (a) {
	return {ctor: 'ClickNextDate', _0: a};
};
var _user$project$ScheduleUpdate$ClickPrevDate = function (a) {
	return {ctor: 'ClickPrevDate', _0: a};
};
var _user$project$ScheduleUpdate$SetTime = function (a) {
	return {ctor: 'SetTime', _0: a};
};
var _user$project$ScheduleUpdate$now = A2(_elm_lang$core$Task$perform, _user$project$ScheduleUpdate$SetTime, _elm_lang$core$Time$now);
var _user$project$ScheduleUpdate$ClickMovie = function (a) {
	return {ctor: 'ClickMovie', _0: a};
};
var _user$project$ScheduleUpdate$StoreSchedule = function (a) {
	return {ctor: 'StoreSchedule', _0: a};
};
var _user$project$ScheduleUpdate$NoMsg = {ctor: 'NoMsg'};
